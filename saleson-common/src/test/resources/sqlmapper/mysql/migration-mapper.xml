<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="saleson.user.domain.MigrationMapper">

	<select id="getMaxUserId" resultType="long">
		SELECT MAX(USER_ID) FROM EXCEL_USER
	</select>

    <delete id="deleteUser">
        DELETE FROM OP_USER WHERE USER_ID >= 1000
    </delete>

    <delete id="deleteUserRole">
        DELETE FROM OP_USER_ROLE WHERE USER_ID >= 1000
           AND USER_ID NOT IN (20543, 20544, 20545, 20546, 20547, 20548, 20549, 20551, 20566)
    </delete>

    <delete id="deletePoint">
        DELETE FROM OP_POINT WHERE POINT_ID
    </delete>

    <delete id="deleteUserSns">
        DELETE FROM OP_USER_SNS
    </delete>

    <insert id="insertUser">
        INSERT INTO OP_USER (USER_ID, LOGIN_ID, PASSWORD, USER_NAME, EMAIL, STATUS_CODE, LOGIN_COUNT, LOGIN_DATE, UPDATED_DATE, CREATED_DATE)
        SELECT
            USER_ID,
            LOGIN_ID,
            '#PASSWORD#' AS PASSWORD,
            USER_NAME,
            EMAIL,
            '9' AS STATUS_CODE,
            0 AS LOGIN_COUNT,

            CONCAT(
                    LOGIN_DATE_YEAR,
                    CASE WHEN LOGIN_DATE_MONTH IS NULL THEN '' WHEN LOGIN_DATE_MONTH = '' THEN '00' WHEN LENGTH(LOGIN_DATE_MONTH) = 2 THEN LOGIN_DATE_MONTH ELSE CONCAT('0', LOGIN_DATE_MONTH) END,
                    CASE WHEN LOGIN_DATE_DAY IS NULL THEN '' WHEN LOGIN_DATE_DAY = '' THEN '00' WHEN LENGTH(LOGIN_DATE_DAY) = 2  THEN LOGIN_DATE_DAY ELSE CONCAT('0', LOGIN_DATE_DAY) END,
                    CASE WHEN LOGIN_DATE_H IS NULL THEN '' WHEN LOGIN_DATE_H = '' THEN '00' WHEN LENGTH(LOGIN_DATE_H) = 2  THEN LOGIN_DATE_H ELSE CONCAT('0', LOGIN_DATE_H) END,
                    CASE WHEN LOGIN_DATE_M IS NULL THEN '' WHEN LOGIN_DATE_M = '' THEN '00' WHEN LENGTH(LOGIN_DATE_M) = 2  THEN LOGIN_DATE_M ELSE CONCAT('0', LOGIN_DATE_M) END,
                    CASE WHEN LOGIN_DATE_M IS NULL THEN '' ELSE '00' END
                ) AS LOGIN_DATE,

            UPDATED_DATE,

            CONCAT(
                    CREATED_DATE_YEAR,
                    CASE WHEN CREATED_DATE_MONTH IS NULL THEN '' WHEN CREATED_DATE_MONTH = '' THEN '00' WHEN LENGTH(CREATED_DATE_MONTH) = 2 THEN CREATED_DATE_MONTH ELSE CONCAT('0', CREATED_DATE_MONTH) END,
                    CASE WHEN CREATED_DATE_DAY IS NULL THEN '' WHEN CREATED_DATE_DAY = '' THEN '00' WHEN LENGTH(CREATED_DATE_DAY) = 2  THEN CREATED_DATE_DAY ELSE CONCAT('0', CREATED_DATE_DAY) END,
                    CASE WHEN CREATED_DATE IS NULL THEN '' ELSE '000000' END
                ) AS CREATED_DATE
        FROM (
                 SELECT USER_ID,
                        LOGIN_ID,
                        ''                                                                                                 AS PASSWORD,
                        USER_NAME,
                        EMAIL,
                        '9'                                                                                                AS STATUS_CODE,
                        0                                                                                                  AS LOGIN_COUNT,
                        LOGIN_DATE,
                        SUBSTRING_INDEX(LOGIN_DATE, '-', 1)                                                                AS LOGIN_DATE_YEAR,
                        REPLACE(SUBSTRING_INDEX(LOGIN_DATE, '-', 2), CONCAT(SUBSTRING_INDEX(LOGIN_DATE, '-', 1), '-'),
                                '')                                                                                        AS LOGIN_DATE_MONTH,
                        REPLACE(SUBSTRING_INDEX(SUBSTRING_INDEX(LOGIN_DATE, ' ', 1), '-', 3),
                                CONCAT(SUBSTRING_INDEX(SUBSTRING_INDEX(LOGIN_DATE, ' ', 1), '-', 2), '-'),
                                '')                                                                                        AS LOGIN_DATE_DAY,
                        SUBSTRING_INDEX(SUBSTRING_INDEX(LOGIN_DATE, ' ', -1), ':', 1)                                      AS LOGIN_DATE_H,
                        REPLACE(SUBSTRING_INDEX(SUBSTRING_INDEX(LOGIN_DATE, ' ', -1), ':', 2),
                                CONCAT(SUBSTRING_INDEX(SUBSTRING_INDEX(LOGIN_DATE, ' ', -1), ':', 1), ':'),
                                '')                                                                                        AS LOGIN_DATE_M,


                        DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')                                                                 AS UPDATED_DATE,
                        CREATED_DATE,

                        SUBSTRING_INDEX(CREATED_DATE, '-', 1)                                                              AS CREATED_DATE_YEAR,
                        REPLACE(SUBSTRING_INDEX(CREATED_DATE, '-', 2), CONCAT(SUBSTRING_INDEX(CREATED_DATE, '-', 1), '-'),
                                '')                                                                                        AS CREATED_DATE_MONTH,
                        REPLACE(SUBSTRING_INDEX(SUBSTRING_INDEX(CREATED_DATE, ' ', 1), '-', 3),
                                CONCAT(SUBSTRING_INDEX(SUBSTRING_INDEX(CREATED_DATE, ' ', 1), '-', 2), '-'),
                                '')                                                                                        AS CREATED_DATE_DAY


                 FROM excel_user
             ) T
    </insert>

    <insert id="insertUserDetail">
        INSERT INTO OP_USER_DETAIL (USER_ID, LEVEL_ID, NEW_POST, POST, ADDRESS, ADDRESS_DETAIL, TEL_NUMBER, PHONE_NUMBER, RECEIVE_EMAIL, RECEIVE_SMS, RECEIVE_PUSH, GENDER, POINT)
        SELECT
            USER_ID,

            1 AS LEVEL_ID,
            POST,
            POST,
            ADDRESS,
            ADDRESS_DETAIL,
            CASE WHEN TEL_NUMBER IS NULL THEN '--' ELSE TEL_NUMBER END AS TEL_NUMBER,
            CASE WHEN PHONE_NUMBER IS NULL THEN '--' ELSE PHONE_NUMBER END AS PHONE_NUMBER,
            CASE WHEN RECEIVE_EMAIL = 'T' THEN '0' ELSE '1' END AS RECEIVE_EMAIL,
            CASE WHEN RECEIVE_SMS = 'T' THEN '0' ELSE '1' END AS RECEIVE_SMS,

            '1' AS RECEIVE_PUSH,
            GENDER,
            POINT
        FROM EXCEL_USER
    </insert>

    <insert id="insertUserRole">
        INSERT INTO OP_USER_ROLE (USER_ID, AUTHORITY)
        SELECT
            USER_ID,
            'ROLE_USER' AS AUTHORITY
        FROM EXCEL_USER
    </insert>

    <insert id="insertPoint">
        INSERT INTO OP_POINT (POINT_ID, POINT_TYPE, SAVED_TYPE, SAVED_YEAR, SAVED_MONTH, SAVED_POINT, POINT, REASON, USER_ID, MANAGER_USER_ID, EXPIRATION_DATE, CREATED_DATE)
        SELECT
            USER_ID,
            'point' AS POINT_TYPE,
            '2' AS SAVED_TYPE,
            DATE_FORMAT(NOW(), '%Y') AS SAVED_YEAR,
            DATE_FORMAT(NOW(), '%m') AS SAVED_MONTH,
            POINT AS SAVED_POINT,
            POINT,
            '홈페이지 리뉴얼로 인한 이전 적립금 이관' REASON,
            USER_ID,
            0 As MANAGER_USER_ID,
            DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 1 YEAR), '%Y%m%d') AS EXPIRATION_DATE,
            DATE_FORMAT(NOW(), '%Y%m%d%H%i%s') AS CREATED_DATE

        FROM excel_user WHERE POINT > 0
    </insert>

    <insert id="insertUserSns">
        INSERT INTO OP_USER_SNS (SNS_USER_ID, SNS_ID, USER_ID, SNS_TYPE, SNS_NAME, CREATED_DATE)
        SELECT
            @RNUM := @RNUM + 1 AS SNS_USER_ID,
            SNS_ID,
            USER_ID,
            SNS_TYPE,
            USER_NAME,
            CONCAT(
                    CREATED_DATE_YEAR,
                    CASE
                        WHEN CREATED_DATE_MONTH IS NULL THEN ''
                        WHEN CREATED_DATE_MONTH = '' THEN '00'
                        WHEN LENGTH(CREATED_DATE_MONTH) = 2 THEN CREATED_DATE_MONTH
                        ELSE CONCAT('0', CREATED_DATE_MONTH) END,
                    CASE
                        WHEN CREATED_DATE_DAY IS NULL THEN ''
                        WHEN CREATED_DATE_DAY = '' THEN '00'
                        WHEN LENGTH(CREATED_DATE_DAY) = 2 THEN CREATED_DATE_DAY
                        ELSE CONCAT('0', CREATED_DATE_DAY) END,
                    CASE WHEN CREATED_DATE IS NULL THEN '' ELSE '000000' END
                   ) AS CREATED_DATE
        FROM (
                 SELECT CASE
                        WHEN RIGHT(LOGIN_ID, 2) = '@n' THEN REPLACE(LOGIN_ID, '@n', '')
                        WHEN RIGHT(LOGIN_ID, 2) = '@k' THEN REPLACE(LOGIN_ID, '@k', '')
                        ELSE LOGIN_ID
                        END                             AS SNS_ID,
                     USER_ID,
                     CASE
                        WHEN RIGHT(LOGIN_ID, 2) = '@n' THEN 'naver'
                        WHEN RIGHT(LOGIN_ID, 2) = '@k' THEN 'kakao'
                        END                             AS SNS_TYPE,
                     USER_NAME,
                     CREATED_DATE,
                     SUBSTRING_INDEX(CREATED_DATE, '-', 1) AS CREATED_DATE_YEAR,
                     REPLACE(SUBSTRING_INDEX(CREATED_DATE, '-', 2), CONCAT(SUBSTRING_INDEX(CREATED_DATE, '-', 1), '-'),
                     '')                           AS CREATED_DATE_MONTH,
                     REPLACE(SUBSTRING_INDEX(SUBSTRING_INDEX(CREATED_DATE, ' ', 1), '-', 3),
                     CONCAT(SUBSTRING_INDEX(SUBSTRING_INDEX(CREATED_DATE, ' ', 1), '-', 2), '-'),
                     '')                           AS CREATED_DATE_DAY
                 FROM excel_user
                 WHERE LOGIN_ID LIKE '%@n' OR LOGIN_ID LIKE '%@k'
             ) T, (SELECT @RNUM := 0) R
    </insert>

</mapper>