<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="saleson.shop.order.refund.OrderRefundMapper">
	
	<resultMap id="OrderRefundResult" type="saleson.shop.order.refund.domain.OrderRefund">
		<id property="refundCode" column="REFUND_CODE" />
		<result property="orderCode" column="ORDER_CODE" />
		<result property="orderSequence" column="ORDER_SEQUENCE" />
		<result property="refundStatusCode" column="REFUND_STATUS_CODE" />
		<result property="requestManagerUserName" column="REQUEST_MANAGER_USER_NAME" />
		<result property="processManagerUserName" column="PROCESS_MANAGER_USER_NAME" />
		<result property="returnBankName" column="RETURN_BANK_NAME" />
		<result property="returnVirtualNo" column="RETURN_VIRTUAL_NO" />
		<result property="returnBankInName" column="RETURN_BANK_IN_NAME" />
		<result property="createdDate" column="CREATED_DATE" />
		<result property="updatedDate" column="UPDATED_DATE" />
		
		<result property="userId" column="USER_ID" />
		<result property="loginId" column="LOGIN_ID" />
		<result property="buyerName" column="BUYER_NAME" />
		<result property="userName" column="USER_NAME" />
	</resultMap>

	<sql id="sqlDefaultColumnForRefund">
		R.*,
		O.BUYER_NAME,
		O.LOGIN_ID,
		O.USER_ID,
		U.USER_NAME
	</sql>

	<sql id="sqlDefaultFormForRefund">
		FROM OP_ORDER_REFUND R 
			INNER JOIN OP_ORDER O 
				ON R.ORDER_CODE = O.ORDER_CODE 
				AND R.ORDER_SEQUENCE = O.ORDER_SEQUENCE 
				AND O.DATA_STATUS_CODE = '1'
			LEFT JOIN OP_USER U 
				ON O.USER_ID = U.USER_ID
	</sql>

	<sql id="whereRefund">
		<where>
			<if test="refundStatusCode != null and refundStatusCode != ''">
				AND R.REFUND_STATUS_CODE = #{refundStatusCode}
			</if>
			
			<if test="searchDateType != null and searchDateType != ''">
				<if test="(searchStartDate != null and searchStartDate != '') and (searchEndDate != null and searchEndDate != '')">
					AND DATE_FORMAT(${searchDateType}, '%Y%m%d') BETWEEN #{searchStartDate} AND #{searchEndDate}
				</if>
			</if>
			
			<if test="(query != null and query != '') and (where != null and where != '')">
				<choose>
					<when test="where == 'USER_NAME'">
						AND O.BUYER_NAME LIKE CONCAT('%', #{query}, '%')
					</when>
					<when test="where == 'USER_ID'">
						AND O.USER_ID IN (
							SELECT USER_ID FROM OP_USER
							WHERE LOGIN_ID LIKE CONCAT('%', #{query},'%')
						)
					</when>
					<when test='where == "REFUND_CODE"'>
						AND R.REFUND_CODE LIKE CONCAT('%', #{query}, '%')
					</when>
					<when test='where == "ORDER_CODE"'>
						AND R.ORDER_CODE LIKE CONCAT('%', #{query}, '%')
					</when>
				</choose>
			</if>
		</where>
	</sql>

	<select id="getOrderRefundCountByParam" parameterType="saleson.shop.order.refund.support.OrderRefundParam"
		resultType="Integer">
	
		SELECT 
			COUNT(*) 
		<include refid="sqlDefaultFormForRefund" />
		<include refid="whereRefund" />
		
	</select>
	
	<select id="getOrderRefundListByParam" parameterType="saleson.shop.order.refund.support.OrderRefundParam"
		resultMap="OrderRefundResult">
	
		<include refid="CommonMapper.paginationHeader" />
			
			SELECT 
				<include refid="sqlDefaultColumnForRefund" /> 
			<include refid="sqlDefaultFormForRefund" />
			<include refid="whereRefund" />
			
			ORDER BY R.CREATED_DATE DESC
			
		<include refid="CommonMapper.paginationFooter" />
		
	</select>

	<select id="getOrderRefundByCode" parameterType="String" resultMap="OrderRefundResult">
		
		SELECT 
			<include refid="sqlDefaultColumnForRefund" /> 
		<include refid="sqlDefaultFormForRefund" />
		<where>
			R.REFUND_CODE = #{refundCode}
		</where>
	</select>

	<select id="getActiveRefundCodeByParam" parameterType="saleson.shop.order.refund.support.OrderRefundParam"
		resultType="String">
		
		SELECT REFUND_CODE FROM OP_ORDER_REFUND
		<where>
			ORDER_CODE = #{orderCode}
			AND ORDER_SEQUENCE = #{orderSequence}
			AND REFUND_STATUS_CODE = '1'
		</where>
			
	</select>

	<insert id="insertOrderRefund" parameterType="saleson.shop.order.refund.domain.OrderRefund">
        <!--
		<selectKey keyProperty="refundCode" resultType="String" order="BEFORE">
			SELECT CONCAT('RE-', <include refid="CommonMapper.date" />, '-', COUNT(*) + 1) 
			FROM OP_ORDER_REFUND
			WHERE
				REFUND_DATE = <include refid="CommonMapper.date" />
		</selectKey>
		-->
		INSERT INTO OP_ORDER_REFUND (
			REFUND_CODE,
			REFUND_DATE,
			ORDER_CODE,
			ORDER_SEQUENCE,
			REFUND_STATUS_CODE,
			REQUEST_MANAGER_USER_NAME,
			PROCESS_MANAGER_USER_NAME,
			RETURN_BANK_NAME,
			RETURN_VIRTUAL_NO,
			RETURN_BANK_IN_NAME,
			CREATED_DATE
		) VALUES (
			#{refundCode},
			<include refid="CommonMapper.date" />,
			#{orderCode},
			#{orderSequence},
			#{refundStatusCode},
			#{requestManagerUserName},
			#{processManagerUserName},
			#{returnBankName},
			#{returnVirtualNo},
			#{returnBankInName},
			<include refid="CommonMapper.datetime" />
		)
	</insert>

	<update id="updateRefundStatus" parameterType="saleson.shop.order.refund.domain.OrderRefund">
		UPDATE OP_ORDER_REFUND SET
			REFUND_STATUS_CODE = '2',
			RETURN_BANK_NAME = #{returnBankName},
			RETURN_VIRTUAL_NO = #{returnVirtualNo},
			RETURN_BANK_IN_NAME = #{returnBankInName},
			PROCESS_MANAGER_USER_NAME = #{processManagerUserName},
			UPDATED_DATE = <include refid="CommonMapper.datetime" />
		WHERE
			REFUND_CODE = #{refundCode}
	</update>

	<update id="updateRefundFinishedForItem" parameterType="saleson.shop.order.refund.domain.OrderRefund">
		UPDATE OP_ORDER_ITEM OI 
		INNER JOIN (
			SELECT 
				'CANCEL' AS TYPE,
				ITEM_SEQUENCE
			FROM OP_ORDER_CANCEL_APPLY
			WHERE
				REFUND_CODE = #{refundCode}
			
			UNION
			
			SELECT 
				'RETURN' AS TYPE,
				ITEM_SEQUENCE
			FROM OP_ORDER_RETURN_APPLY
			WHERE
				REFUND_CODE = #{refundCode}
				
		) TARGET ON OI.ITEM_SEQUENCE = TARGET.ITEM_SEQUENCE
		SET
			OI.CANCEL_FLAG = 'Y',
			OI.REFUND_STATUS = '2',
			OI.SALES_CANCEL_DATE = <include refid="CommonMapper.datetime" />,
			OI.CANCEL_REQUEST_FINISH_DATE = (
				CASE WHEN TARGET.TYPE = 'CANCEL' THEN 
					<include refid="CommonMapper.datetime" /> 
				ELSE 
					'00000000000000' 
				END
			),
			OI.RETURN_REQUEST_FINISH_DATE = (
				CASE WHEN TARGET.TYPE = 'RETURN' THEN 
					<include refid="CommonMapper.datetime" /> 
				ELSE 
					'00000000000000' 
				END
			),
			OI.ORDER_STATUS = (
				CASE WHEN TARGET.TYPE = 'CANCEL' THEN 
					'75' 
				ELSE 
					'65' 
				END
			)
		<where>
			ORDER_CODE = #{orderCode}
			AND ORDER_SEQUENCE = #{orderSequence}
		</where>
	</update>

	<delete id="deleteOrderRefundInfo" parameterType="saleson.shop.order.claimapply.domain.OrderCancelApply">
		DELETE FROM OP_ORDER_REFUND
		<where>
			REFUND_CODE = #{refundCode}
			AND ORDER_CODE = #{orderCode}
			AND ORDER_SEQUENCE = #{orderSequence}
			AND REFUND_STATUS_CODE = '1'
		</where>			
	</delete>
	
	<delete id="deleteOrderRefundInfoByReturn" parameterType="saleson.shop.order.claimapply.domain.OrderReturnApply">
		DELETE FROM OP_ORDER_REFUND
		<where>
			REFUND_CODE = #{refundCode}
			AND ORDER_CODE = #{orderCode}
			AND ORDER_SEQUENCE = #{orderSequence}
			AND REFUND_STATUS_CODE = '1'
		</where>			
	</delete>
</mapper>