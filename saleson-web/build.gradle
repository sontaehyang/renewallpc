apply plugin: 'war'
// jspc-gradle-plugin
//apply plugin: "com.liferay.jasper.jspc"
apply plugin: 'com.bmuschko.tomcat'

dependencies {
    compile project(':saleson-common')

    implementation 'org.springframework.boot:spring-boot-starter-web'

    // tomcat-gradle-plugin
    compile("org.apache.tomcat.embed:tomcat-embed-jasper")

    compile("javax.servlet:jstl:1.2")
    compile("org.apache.tiles:tiles-jsp:3.0.8")




    // tomcat-gradle-plugin
    def tomcatVersion = '9.0.1'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:9.0.0.M6",
            "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"
}

bootRun {
    sourceResources sourceSets.main

    String activeProfile = System.properties['spring.profiles.active']
    systemProperty "spring.profiles.active", activeProfile

    if (System.getProperty('debug', 'false') == 'true') {
        jvmArgs = ["-Xmx2g", "-Xdebug", "-XX:+CMSClassUnloadingEnabled",
                   "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5105"]
    }

}

task copyDeps(type: Copy) {
    from configurations.runtime
    into 'build/jars'
}

// 2. tomcat-plugin
tomcat {
    httpProtocol = 'org.apache.coyote.http11.Http11Nio2Protocol'
    ajpProtocol  = 'org.apache.coyote.ajp.AjpNio2Protocol'

    jasper {
        compilerSourceVM = 1.8
        compilerTargetVM = 1.8
        outputDir = new File(buildDir, "jasper1")
        //destinationDir = file("$buildDir/jasper-classes")
    }
}




task compileOne (type: JavaCompile) {
    source = file("$buildDir/jasper1")
    classpath = sourceSets.main.compileClasspath
    //destinationDir = sourceSets.main.output.classesDir
    destinationDir = file("$buildDir/jasper-classes2")

//    options{
//        sourcepath = file("$buildDir/jasper1")
//    }
}

//compileOne.options.compilerArgs = ["-sourcepath", "$buildDir/jasper1"]
compileOne.options.sourcepath = files("$buildDir/jasper1")
